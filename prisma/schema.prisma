generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id          String             @id @default(uuid()) @db.Uuid  @map("user_id")
  name             String?            @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  phone            String?            @db.VarChar(20)
  isActive         Boolean            @default(true)
  isDeleted        Boolean            @default(true)
  isAdminDeleted   Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  mfaSecret        String?            @db.VarChar(255)
  PropertyComments PropertyComments[]
  PropertyDetails  PropertyDetails[]
  PropertyLike     PropertyLike[]
}

model PropertyDetails {
  property_id      String             @id @default(uuid()) @db.Uuid
  propertyName     String             @db.VarChar(255)
  address          String             @db.VarChar(255)
  lat              String             @db.VarChar(50)
  long             String             @db.VarChar(50)
  isActive         Boolean            @default(true)
  isDeleted        Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  price            String             @db.VarChar(100)
  userId           String             @db.Uuid
  PropertyComments PropertyComments[]
  user             User               @relation(fields: [userId], references: [user_id])
  PropertyGallery  PropertyGallery[]
  PropertyLike     PropertyLike[]
}

model PropertyLike {
  id         String          @id @default(uuid()) @db.Uuid
  userId     String          @db.Uuid
  propertyId String          @db.Uuid
  createdAt  DateTime        @default(now())
  property   PropertyDetails @relation(fields: [propertyId], references: [property_id])
  user       User            @relation(fields: [userId], references: [user_id])
}

model PropertyGallery {
  id         String          @id @default(uuid()) @db.Uuid
  imageUrl   String          @db.VarChar(255)
  propertyId String          @db.Uuid
  property   PropertyDetails @relation(fields: [propertyId], references: [property_id])
}

model PropertyComments {
  id         String          @id @default(uuid()) @db.Uuid
  userId     String          @db.Uuid
  propertyId String          @db.Uuid
  comment    String          @db.VarChar(500)
  createdAt  DateTime        @default(now())
  property   PropertyDetails @relation(fields: [propertyId], references: [property_id])
  user       User            @relation(fields: [userId], references: [user_id])
}
